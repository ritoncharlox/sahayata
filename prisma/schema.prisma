datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  userName         String?  @unique
  name             String
  email            String   @unique
  number           String?  @unique
  location         String?
  password         String? // Note: You may handle password hashing separately
  dateJoined       DateTime @default(now())
  isUser           Boolean  @default(true)
  isAdmin          Boolean  @default(false)
  isFreelancer     Boolean  @default(false)
  isNumberVerified Boolean  @default(false)
  isEmailVerified  Boolean  @default(false)
  avatar           String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  otps             Otp[]
}

model Service {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  title         String        @unique
  description   String
  subcategories Json
  icon          String
  imageAddress  String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

// model Subcategory {
//   id           String   @id @default(auto()) @map("_id") @db.ObjectId
//   title        String
//   description  String
//   imageAddress String
//   service      Service  @relation(fields: [serviceId], references: [id])
//   serviceId    String   @db.ObjectId
//   createdAt    DateTime @default(now())
//   updatedAt    DateTime @updatedAt
// }

model Otp {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  otp       String
  expiresAt DateTime
  used      Boolean  @default(false)
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
